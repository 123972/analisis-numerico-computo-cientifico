1.-Investiga* sobre la subrutina de Fortran dgemv (parámetros que recibe y la salida).
Los parámetros que acepta de entrada son:

- TRANS: La operación a ser ejecutada, puede ser de tres tipos:
        + TRANS = 'N' or 'n'   y := alpha*A*x + beta*y.
        + TRANS = 'T' or 't'   y := alpha*A'*x + beta*y.
        + TRANS = 'C' or 'c'   y := alpha*A'*x + beta*y.
- M: Número de filas de la matríz A.
- N: Número de columnas de la matríz A.
- ALPHA: El escalar de la operación.
- A: Arreglo de doble precisión de dimensiones (LDA,n).
- LDA: Especifica la primera dimensión de A.
- X: Arreglo de dimensiones mínimas:
        + ( 1 + ( n - 1 )*abs( INCX ) ) cuando TRANS = 'N' or 'n'.
        + ( 1 + ( m - 1 )*abs( INCX ) ) para cualquier otro caso.
- INCX: Incremento de los elementos de X.
- BETA: Escalar BETA.
- Y: Arreglo de doble precisión de dimensiones mínimas:
        +  ( 1 + ( m - 1 )*abs( INCY ) ) para TRANS = 'N' or 'n'.
        + ( 1 + ( n - 1 )*abs( INCY ) ).
        A la salida el vector Y es modificado por el vector actualizado y.

- INCY: Incremento de los elementos de Y.

La salida de la función es el vector Y actualizado.
2. Se ejecutan pruebas con archivos A.txt y v.txt diferentes.

3. Se entrega el programa tarea6_3.c
para compilar:
gcc -Wall tarea6_3.c funciones.c -o tarea6_3.out -lblas

para correr:
./tarea6_3.out 3 2

4.Se pueden llamar dado que se convierten al formato utilizado en FORTRAN cuando utilizamos las funciones de deficiniciones.h y funciones.c;
antes de colocar los vectores se convierten mediante las funciones entradas(), entradas_vector().

5.
- TRANSA: Especifica la forma de op(A) para ser utilizada en la matríz de multiplicación:
        + TRANSA = 'N' or 'n',  op( A ) = A.
        + TRANSA = 'T' or 't',  op( A ) = A'.
        + TRANSA = 'C' or 'c',  op( A ) = A'.
- TRANSB: Especifica la forma de op(B) para ser usada en la matríz de multiplicación:
        + TRANSB = 'N' or 'n',  op( B ) = B.
        + TRANSB = 'C' or 'c',  op( B ) = B'.
        + TRANSB = 'T' or 't',  op( B ) = B'.

- M: Número de filas de la matríz op(A).
- N: Número de columnas de la matríz op(B) y el número de columnas de la matríz C.
- K: Número de columnas de la matríz op(A) y número de filas de la matríz op(B).
- ALPHA: El escalar de la operación.
- A: Arreglo de doble precisión de dimensiones (LDA,n).
- LDA: Especifica la primera dimensión de A.
- B: Arreglo de doble precisión de dimensiones (LDB,kb).
- LDB: Especifica la primera dimensión de A.
- BETA: Escalar BETA.
- C: Arreglo de doble precisión de dimensiones (LDC,n).
A la salida C se sobre escribe por la matríz de dimensiones (m x n)
resultado de la operación ( alpha*op(A)*op(B) + beta*C).
- LDC:  Especifica la primera dimensión de C.

A la salida sobre escribe el arreglo C.

6. Se utilizan diferentes valores en los archivos A2.txt y B2.txt

7. Funciona ya que aún cuando estamos almacenando como Row Major en el programa de funciones las matrices se leen de manera diferente y al introducir las matrices a la$

8. para compilar:
gcc -Wall tarea6_8.c funciones.c -o tarea6_8.out -lblas
para correr:
./tarea6_8.out 5 4 8 6 5
