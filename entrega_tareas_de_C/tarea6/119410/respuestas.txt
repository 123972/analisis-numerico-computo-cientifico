1. dgemv es una subrutina que hace la siguiente operación:
y = alpha * A * X + beta * Y ó
y = alpha * A' * X + beta * Y

Recibe los siguientes parámetros:
TRANS: caracter que especifica la operación que se va a realizar, puede ser 'n', 't' o 'c'.
M: integer que especifica el número de filas de la matriz A.
N: integer que especifica el número de columnas de la matriz A.
ALPHA: doble precisión, un escalar.
A: A(LDA) doble precisión, vector de dimensión (LDA,N).
LDA: integer que especifica la primera dimensión de A.
X: X(*) vector de doble precisión
INCX: integer que especifica el incremento para los elementos de X.
BETA: doble precisión, un escalar.
Y: Y(*) vector de doble precisión
INCY: integerque especifica el incremento para los elementos de Y.

regresa un número real, long precision.

4. Se pueden llamar las rutinas de fortran porque en el archivo de definiciones se define un struct de un arreglo de 2 dimensiones como column-major y después en el archivo de funciones se incluye una función que inicializa las matrices con este tipo de estructura.

5. dgemm es una subrutina que hace la siguiente operación:

Recibe los siguientes parámetros:
TRANSA: caracter que especifica el tipo de A, uede ser 'n', 't' o 'c'.
TRANSB: caracter que especifica el tipo de B, uede ser 'n', 't' o 'c'.
M: integer que especifica el número de filas de A y de C.
N: integer que especifica el número de columnas de B y de C.
K: integer que especifica el número de columnas de A y el número de filas de C.
ALPHA: escalar de doble precisión.
A: A(LDA, *) vector de doble precisión.
LDA: integer que especifica la primera dimensión de A.
B: B(LDB, *) vector de doble precisión.
LDB: integer que especifica la primera dimensión de B.
BETA: escalar de doble precisión
C: C(LDC, *) vector de doble precisión
LDC: integer que especifica la primera dimensión de C.

regresa un número real, long precision.

7. El trick funciona porque 
