
5.- Investiga* sobre la subrutina de Fortran dgemm (parámetros que recibe y la salida).


DGEM

Para la ejecución de operaciones matriz-matriz

C := alpha*op(A)*op(B) + beta*C

donde op(X) es una de las siguientes:

op(X) = X o op(X) =X**T,

Alpha y beta son escalares, y A, B y C son matrices, con op(A) como una matriz mxk, op(B) como una matriz kxn y C como una matriz mxn.

Parametros:

DGEM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB, BETA, C, LDC)

TRANSA: tipo CHARACTER al entrada, este parámetro especifica la forma de op(A) para ser usado:

La multiplicación de matrices como sigue:

TRANSA = 'N' o 'n', op(A) = A.
TRANSA = 'T' o 't', op(A) = A**T.
TRANSA = 'C' o 'c', op(A) = A**T.

TRANSB: tipo CHARACTER al entrada, este parámetro especifica la forma de op(B) para ser usado:

La multiplicación de matrices como sigue:

TRANSB = 'N' o 'n', op(B) = B.
TRANSB = 'T' o 't', op(B) = B**T.
TRANSB = 'C' o 'c', op(B) = B**T.

M: tipo integer, especifica el número de filas de op(A), de la matriz C. M debe ser al menos 0.

N: tipo integer, especifica el número de columnas de op(B) y el número de columnas de la matriz C. N debe al menos ser 0.

K: tipo integer, k especifica el número de columnas de op(A) y el numero de filas de la matriz op(B), K al menos debe ser 0.

ALPHA: tipo DOUBLE PRECISION, especifica el escalar aplha

A: tipo DOUBLE PRECISION array, dimension (LDA, ka), donde ka es k cuando TRANSA =  'N' o 'n' m de otra manera. Antes de especificar la entrada de TRANSA = 'N' o 'n' la m inicial de k parte del arreglo A debe contener la matriz A, de otra manera la inicial k por m parte del arreglo A debe contener la matriz A.

LDA: tipo INTEGER, LDA especifica la primer dimension de A como fue declarada en el subprograma. Cuando TRANSA = 'N' o 'n' entonces LDA debe ser al menos max(1,m) de otra manera LDA debe ser al menos max(1,k).

B: tipo DOUBLE PRECISION array, dimension (LDB, kb), donde kb es k cuando TRANSA =  'N' o 'n' k de otra manera. Antes de especificar la entrada de TRANSB = 'N' o 'n' la k inicial de n parte del arreglo B debe contener la matriz B, de otra manera la inicial n por k parte del arreglo B debe contener la matriz B.

LDB: tipo INTEGER, LDB especifica la primer dimension de B como fue declarada en el subprograma. Cuando TRANSB = 'N' o 'n' entonces LDB debe ser al menos max(1,k) de otra manera LDB debe ser al menos max(1,n).

BETA: tipo DOUBLE PRECISION, especifica el escalar beta. Cuando BETA es cero, C no debe especificarse en la entrada.

C: tipo DOUBLE PRECISION array, dimension (LDC, N). Antes de especificar la entrada la m inicial de n parte del arreglo C debe contener la matriz C excepto cuando beta es cero, en cual caso C no debe ser inicializadod de entrada. En la salida C es sobreescrito por la matriz m por n dada por: (alpha*op(A)*op(B) + beta*C)

LDC: tipo INTEGER, especifica la dimension de C como se declaró en el subprograma. LDC debe ser al menos max(1,m).





