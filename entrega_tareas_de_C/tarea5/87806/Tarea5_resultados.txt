Tarea 5

Clave Única 87806

Pregunta 1:
Cuando utilizamos (< >) se busca el archivo dentro de los directorios del sistema. Por otro lado, cuando usamos ("") busca en el mismo directorio pues está definido por el usuario.
Por otro lado, usamos (static) cuando buscamos que la variable sólo sea "vista" en el archivo donde está definida.

Pregunta2:
BLAS son rutinas para hacer operaciones basicas con vectores y matrices. En nivel 1 hace operaciones entre escalares - vectores y vectores - vectores; el nivel 2 realiza operaciones vector - matriz y el nivel 3 hace operaciones matriz - matriz.
BLAS fue escrito originalmente en Fortran; no obstante, posteriormente se robusteció con una API de C y se generó CBLAS.
LAPACK es un software escrito en Fortran 90 y provee rutinas para resolver sistemas de ecuaciones lineales, solucion por mínimos cuadrados del sistema de ecuaciones lineales, problemas de eigenvalores y valores singulares. También provee descomposiciones de matrices.
Las rutinas de LAPACK estan escritas de tal manera que la mayoria de los calculos se realicen llamando a BLAS. En particular esta diseñado para explotar el nivel 3 de BLAS.
ATLAS es un proyecto que busca entregar desempeño portatil. Cuenta con interfaces en C y Fortran77 para una implementación eficiente y portatil de BLAS, así como algunas rutinas de LAPACK.

Pregunta 3:

- Prueba 1:

Los vectores definidos son:v_1[4]=\{12,32,3,-1,0\} y v_2[4]=\{11,-2,4,134,-1\}.

El output fue:
------------
vector :
vector[0]=12.00000
vector[1]=32.00000
vector[2]=3.00000
vector[3]=-1.00000
vector[4]=0.00000
------------
vector :
vector[0]=11.00000
vector[1]=-2.00000
vector[2]=4.00000
vector[3]=134.00000
vector[4]=-1.00000
------------
resultado: -54.000000

-Prueba 2:

v_1[4]=\{3,1,6,8\}$ y $v_2[4]=\{-3,-7-,-3,-1\}

El output fue:
vector :
vector[0]=3.00000
vector[1]=1.00000
vector[2]=6.00000
vector[3]=8.00000
------------
vector :
vector[0]=-3.00000
vector[1]=-7.00000
vector[2]=-3.00000
vector[3]=-1.00000
------------
resultado: -42.000000


Pregunta 4:
Como ya vimos, la subrutina ddot regresa el producto punto de dos vectores. La función recibe los siguientes parámetros:

- N un entero, que es el numero de elementos del vector.

- DX un arreglo en doble precisión, dimensión ( 1 + ( N - 1 )*abs( INCX ) ).

- INCX un entero, espacio para almacenamieno entre los elementos de DX.

- DY un arreglo en doble precisión, dimensión ( 1 + ( N - 1 )*abs( INCY ) ).

- INCY un entero, espacio para almacenamieno entre los elementos de DY.

Pregunta 5:
Corriendo el programa con v_1[4]=\{12,32,3,-1,0\} y v_2[4]=\{11,-2,4,134,-1\} y el escalar e = 4, obtenemos el siguiente output al ejecutar "gcc -Wall ejercicio5.c funciones.c -o ejercicio5.out -lblas"  y posteriormente "./ejercicio5.out 5 4":

vector :
vector[0]=12.00000
vector[1]=32.00000
vector[2]=3.00000
vector[3]=-1.00000
vector[4]=0.00000
------------
vector :
vector[0]=11.00000
vector[1]=-2.00000
vector[2]=4.00000
vector[3]=134.00000
vector[4]=-1.00000
------------
resultado:
59.000000
126.000000
16.000000
130.000000
-1.000000

Incluyo en la carpeta los archivos: "ejercicio5.c", "ejercicio5.out", "ejercicio5_resultados.txt" y "funciones.c".
