Tarea5

1. Estudia y entiende los archivos definiciones.h y funciones.c de ahí, en particular investiga por qué se usan "" en la línea que tiene #include en funciones.c en lugar de usar < >. Investiga el uso de static en la definición de variables externas de funciones.c .

La diferencia viene de dónde el preprocesador búsca el archivo que va a incluir. Si se usa <> normalmente es porque el archivo viene como parte de una instalación, es decir, como librerías standard. Por otro lado se usa "" para que se busquen archivos en el mismo directorio del archivo que contiene el programa, esto normalmente se usa para archivos header creados por el usuario.

El uso de static si entiendo bien tiene el propósito de poder declarar variables que sean funcionales en TODO el programa, es decir, que su scope sea global, en cambio otro tipo de variables, una vez que salimos de la función que las utiliza las tendríamos que redeclarar para usar. De esta manera las variables static i y j sólo las declaramos 1 vez al inicio y las usamos en cada uno de los voids sin necesidad de volver a declararlas.

2. Investiga* sobre BLAS, CBLAS, LAPACK, ATLAS y las operaciones de nivel 1, nivel 2 y nivel 3 de BLAS y reporta sobre esta investigación que realizas. Es una investigación que contiene principalmente una descripción sobre los paquetes y niveles anteriores.

En general, como hemos venido viendo en el curso dado que las maquinas NO continuaron creciendo su procesamiento tal cual por cuestiones de disipación de calor, el reto se vuelve el cómo utilizar eficientemente las maquinas multi-core para correr programas en paralelo, ya se con paralelización de tareas o de datos, para que podamos realizar operaciones complejas de esta manera, algunas de las operaciones más complejas de realizar y por lo mismo a través de la historia se han desarrollado muchísimos métodos, son aquellas del álgebra lineal.

Después de revisar las referencias entiendo que BLAS (Basic Linear Algebra Subprograms) es un conjunto de rutinas programadas para realizar operaciones de álgebra lineal de manera eficiente, par ello tiene distintos niveles de operaciones; las de nivel 1 llegan hasta operaciones entre vectores, las de nivel 2 llegan hasta operaciones entre vectores y matrices y las de nivel 3 llegan hasta operaciones de matrices con matrices.

Derivado del éxito de BLAS otros softwares se han ido desarrollando para sacar provecho de las rutinas ya creadas, tal es el caso de LAPACK que está ecrito en Fortran 90, el cual usa tanto como puede las rutinas de nivel 3 de BLAS. Cabe mecionar que este uso se dió después de que fracasaron en un intento por hacer correr un par de librerías famosas de manera eficiente en paralelo.

Por otro lado ATLAS es un proyecto de investigación actualmente en proceso, el cual búsca brindar a través de técnicas empíricas una distribución de BLAS optimizada para que sea lo más portable posible; de esta manera un usuario puede descargar ATLAS y de inmediato tener un BLAS "optimizado" para su arquitectura.

Algo interesante es que del importante uso que se le puede dar a estos softwares, compañías como Intel o MathWorks patrocinan los proyectos; además de los originales autores que son miembros de Universidades como Tennesse o Berkley.

4. Investiga* sobre la subrutina de Fortran ddot (parámetros que recibe y la salida).

Es una función dentro de LAPACK la cual nos regresa el producto punto de dos vectores, sus parámetros son:

- El tamaño de los vectores.
- El double precision array X, que lo entiendo como un vector.
- El manejo de la memoria que debe usar para el vector X.
- El double precision array Y, que es el segundo vetor.
- El manejo de la memoria que debe usar para el vector Y.

Lo que nos regresa es el resultado del producto punto entre los vectores que le damos.




