Tarea 2. Uso de getchar() y de putchar(c).

1. La función getchar() devuelve el carácter que se encuentre en la entrada estándar. Tiene la particularidad de que no devuelve un carácter, sino un entero, ya que con esto se permite representar el carácter y también el fin EOF (End of file) del fichero.
La función putchar(c) regresa el carácter escrito y tiene que tener argumento.

La primer rutina de la tarea, que anexo como Tarea2_0.c, tiene la propiedad de que regresa exactamente lo que se ingresa en pantalla ("Eco"). Esto se debe a que el primer getchar se ejecuta fuera del while y es el que toma la función putchar(c).

#include <stdio.h>
main(){
	int c;
	c = getchar();
	while( c !=EOF){
	   putchar(c);
	   c = getchar();
	}	
 }

2. La segunda rutina de la tarea, que anexo como Tarea2_1.c, tiene un comportamiento diferente, pues el primer getchar() se ejecuta en el while, pero no se puede ejecutar putchar(c) sin argumento, por lo que se tiene que ejecutar otra vez. Esto hace que no aparezcan en pantalla todos los caracteres que toma getchar().


#include <stdio.h>
main(){
	int c;
	while(getchar() !=EOF){
	  c = getchar();
	  putchar(c);	
	}	
 }

Esta rutina, que anexo como Tarea2_2.c, al darle un valor unitario a c, hace lo mismo que la primera rutina mostrada.

#include <stdio.h>
main(){
	int c=1;
	while( c !=EOF){
	  c = getchar();
	  putchar(c);	
	}	
 }

3. Esta rutina, que anexo como Tarea2_3.c, cuenta el número de caracteres. Mientras no encuentre el fin de la cadena de caracteres el contador seguirá aumentando. En C, "\n" es fin de línea.

#include <stdio.h>
main(){
	int cont;
	cont = 0;
	while(getchar() !='\n'){
	  cont++;	
	}
	printf("Número de caracteres = %d\n", cont);
 }

4. Por último, esta rutina, que anexo como Tarea2_4.c, cuenta el número de líneas de un archivo de texto.

#include <stdio.h>
main(){
	int c, cont;
	c = 1;
	cont = 1;
	while(c !=EOF){
	  c = getchar();
	  if(c == '\n'){
	  	cont++;
	  }
	}
	printf("Número de líneas = %d\n", cont);
 }
