Considera el siguiente programa:

#include <stdio.h>
main(void){
    int c;
    c = getchar();
    while( c != EOF){
        putchar(c);
        c = getchar();   
    } 
}

Si lo ejecutas para salir del programa utiliza ctrl + c.



    1. Investiga lo que quieren decir las letras EOF. ¿Por qué se debe definir c como int?
	Las letras EOF significan "End of file"
	La variable c debe definirse como entero porque la función getchar devuelve un entero y más adelante en el código estas se igualan ( c= getchar() ).



    2. Modifica main para eliminar la línea:
	c = getchar();
	antes del while y hacer el llamado a getchar en la condición del while.	

#include <stdio.h>
main(void){
    int c;
    while((c = getchar()) != EOF){
        putchar(c);
    }
}

	En la instrucción anterior se agregué c = getchar() dentro del while, de tal forma que cada vez que se comience un ciclo se lleve a cabo dicha asignación.


    3. Utiliza getchar para escribir un programa que cuente el número de caracteres dado un stdin e imprima este número. Al dar enter (salto de línea) el programa termina. Por ejemplo:
	$echo -e "hola\n" | ./ejecutable.out

#include <stdio.h>
int main(void){
    int c;
    int contador=0;
    while((c = getchar()) != EOF && c !='\n'){
        contador++;
    }

printf("Caracteres: %d \n", contador);
}

   4. Modifica el programa de 3) para que cuente el número de líneas dado un archivo de stdin:
./ejecutable.out < archivo.txt

#include <stdio.h>
int main(void){
    int c;
    int contador=0;
    while((c = getchar()) != EOF){

        if (c == '\n'){
	    cont++;
	}
    }

printf("Lineas: %d \n", contador);
}









